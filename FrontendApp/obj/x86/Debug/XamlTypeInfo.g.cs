//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace FrontendApp
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
    private global::FrontendApp.FrontendApp_XamlTypeInfo.XamlTypeInfoProvider _provider;

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace FrontendApp.FrontendApp_XamlTypeInfo
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[35];
            _typeNameTable[0] = "FrontendApp.MainPage";
            _typeNameTable[1] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[2] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[3] = "FrontendApp.ViewModel.GæstVM";
            _typeNameTable[4] = "Object";
            _typeNameTable[5] = "System.Collections.ObjectModel.ObservableCollection`1<FrontendApp.Guest>";
            _typeNameTable[6] = "System.Collections.ObjectModel.Collection`1<FrontendApp.Guest>";
            _typeNameTable[7] = "FrontendApp.Guest";
            _typeNameTable[8] = "Int32";
            _typeNameTable[9] = "String";
            _typeNameTable[10] = "System.Collections.Generic.ICollection`1<FrontendApp.Booking>";
            _typeNameTable[11] = "FrontendApp.Booking";
            _typeNameTable[12] = "System.DateTime";
            _typeNameTable[13] = "System.ValueType";
            _typeNameTable[14] = "FrontendApp.Room";
            _typeNameTable[15] = "Eventmaker.Common.RelayCommand";
            _typeNameTable[16] = "FrontendApp.Facade";
            _typeNameTable[17] = "System.Collections.ObjectModel.ObservableCollection`1<FrontendApp.GuestAndBookings>";
            _typeNameTable[18] = "System.Collections.ObjectModel.Collection`1<FrontendApp.GuestAndBookings>";
            _typeNameTable[19] = "FrontendApp.GuestAndBookings";
            _typeNameTable[20] = "System.Collections.Generic.List`1<FrontendApp.GuestAndBookings>";
            _typeNameTable[21] = "Microsoft.Xaml.Interactivity.Interaction";
            _typeNameTable[22] = "Microsoft.Xaml.Interactivity.BehaviorCollection";
            _typeNameTable[23] = "Windows.UI.Xaml.DependencyObjectCollection";
            _typeNameTable[24] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[25] = "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior";
            _typeNameTable[26] = "Microsoft.Xaml.Interactivity.Behavior";
            _typeNameTable[27] = "Microsoft.Xaml.Interactivity.ActionCollection";
            _typeNameTable[28] = "Microsoft.Xaml.Interactions.Core.NavigateToPageAction";
            _typeNameTable[29] = "Microsoft.Xaml.Interactions.Core.InvokeCommandAction";
            _typeNameTable[30] = "System.Windows.Input.ICommand";
            _typeNameTable[31] = "Windows.UI.Xaml.Data.IValueConverter";
            _typeNameTable[32] = "FrontendApp.View.OpretGuestUI";
            _typeNameTable[33] = "FrontendApp.RedigerGuestUI";
            _typeNameTable[34] = "FrontendApp.View.sqlViewUI";

            _typeTable = new global::System.Type[35];
            _typeTable[0] = typeof(global::FrontendApp.MainPage);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[2] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[3] = typeof(global::FrontendApp.ViewModel.GæstVM);
            _typeTable[4] = typeof(global::System.Object);
            _typeTable[5] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::FrontendApp.Guest>);
            _typeTable[6] = typeof(global::System.Collections.ObjectModel.Collection<global::FrontendApp.Guest>);
            _typeTable[7] = typeof(global::FrontendApp.Guest);
            _typeTable[8] = typeof(global::System.Int32);
            _typeTable[9] = typeof(global::System.String);
            _typeTable[10] = typeof(global::System.Collections.Generic.ICollection<global::FrontendApp.Booking>);
            _typeTable[11] = typeof(global::FrontendApp.Booking);
            _typeTable[12] = typeof(global::System.DateTime);
            _typeTable[13] = typeof(global::System.ValueType);
            _typeTable[14] = typeof(global::FrontendApp.Room);
            _typeTable[15] = typeof(global::Eventmaker.Common.RelayCommand);
            _typeTable[16] = typeof(global::FrontendApp.Facade);
            _typeTable[17] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::FrontendApp.GuestAndBookings>);
            _typeTable[18] = typeof(global::System.Collections.ObjectModel.Collection<global::FrontendApp.GuestAndBookings>);
            _typeTable[19] = typeof(global::FrontendApp.GuestAndBookings);
            _typeTable[20] = typeof(global::System.Collections.Generic.List<global::FrontendApp.GuestAndBookings>);
            _typeTable[21] = typeof(global::Microsoft.Xaml.Interactivity.Interaction);
            _typeTable[22] = typeof(global::Microsoft.Xaml.Interactivity.BehaviorCollection);
            _typeTable[23] = typeof(global::Windows.UI.Xaml.DependencyObjectCollection);
            _typeTable[24] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[25] = typeof(global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior);
            _typeTable[26] = typeof(global::Microsoft.Xaml.Interactivity.Behavior);
            _typeTable[27] = typeof(global::Microsoft.Xaml.Interactivity.ActionCollection);
            _typeTable[28] = typeof(global::Microsoft.Xaml.Interactions.Core.NavigateToPageAction);
            _typeTable[29] = typeof(global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction);
            _typeTable[30] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[31] = typeof(global::Windows.UI.Xaml.Data.IValueConverter);
            _typeTable[32] = typeof(global::FrontendApp.View.OpretGuestUI);
            _typeTable[33] = typeof(global::FrontendApp.RedigerGuestUI);
            _typeTable[34] = typeof(global::FrontendApp.View.sqlViewUI);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_MainPage() { return new global::FrontendApp.MainPage(); }
        private object Activate_3_GæstVM() { return new global::FrontendApp.ViewModel.GæstVM(); }
        private object Activate_5_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::FrontendApp.Guest>(); }
        private object Activate_6_Collection() { return new global::System.Collections.ObjectModel.Collection<global::FrontendApp.Guest>(); }
        private object Activate_7_Guest() { return new global::FrontendApp.Guest(); }
        private object Activate_11_Booking() { return new global::FrontendApp.Booking(); }
        private object Activate_14_Room() { return new global::FrontendApp.Room(); }
        private object Activate_16_Facade() { return new global::FrontendApp.Facade(); }
        private object Activate_17_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::FrontendApp.GuestAndBookings>(); }
        private object Activate_18_Collection() { return new global::System.Collections.ObjectModel.Collection<global::FrontendApp.GuestAndBookings>(); }
        private object Activate_19_GuestAndBookings() { return new global::FrontendApp.GuestAndBookings(); }
        private object Activate_20_List() { return new global::System.Collections.Generic.List<global::FrontendApp.GuestAndBookings>(); }
        private object Activate_22_BehaviorCollection() { return new global::Microsoft.Xaml.Interactivity.BehaviorCollection(); }
        private object Activate_25_EventTriggerBehavior() { return new global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior(); }
        private object Activate_27_ActionCollection() { return new global::Microsoft.Xaml.Interactivity.ActionCollection(); }
        private object Activate_28_NavigateToPageAction() { return new global::Microsoft.Xaml.Interactions.Core.NavigateToPageAction(); }
        private object Activate_29_InvokeCommandAction() { return new global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction(); }
        private object Activate_32_OpretGuestUI() { return new global::FrontendApp.View.OpretGuestUI(); }
        private object Activate_33_RedigerGuestUI() { return new global::FrontendApp.RedigerGuestUI(); }
        private object Activate_34_sqlViewUI() { return new global::FrontendApp.View.sqlViewUI(); }
        private void VectorAdd_5_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::FrontendApp.Guest>)instance;
            var newItem = (global::FrontendApp.Guest)item;
            collection.Add(newItem);
        }
        private void VectorAdd_6_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::FrontendApp.Guest>)instance;
            var newItem = (global::FrontendApp.Guest)item;
            collection.Add(newItem);
        }
        private void VectorAdd_10_ICollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::FrontendApp.Booking>)instance;
            var newItem = (global::FrontendApp.Booking)item;
            collection.Add(newItem);
        }
        private void VectorAdd_17_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::FrontendApp.GuestAndBookings>)instance;
            var newItem = (global::FrontendApp.GuestAndBookings)item;
            collection.Add(newItem);
        }
        private void VectorAdd_18_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::FrontendApp.GuestAndBookings>)instance;
            var newItem = (global::FrontendApp.GuestAndBookings)item;
            collection.Add(newItem);
        }
        private void VectorAdd_20_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::FrontendApp.GuestAndBookings>)instance;
            var newItem = (global::FrontendApp.GuestAndBookings)item;
            collection.Add(newItem);
        }
        private void VectorAdd_22_BehaviorCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_27_ActionCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::FrontendApp.FrontendApp_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  FrontendApp.MainPage
                userType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_0_MainPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  FrontendApp.ViewModel.GæstVM
                userType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_3_GæstVM;
                userType.AddMemberName("GuestsOC");
                userType.AddMemberName("GemCommand");
                userType.AddMemberName("DeleteCommand");
                userType.AddMemberName("UpdateCommand");
                userType.AddMemberName("HentCommand");
                userType.AddMemberName("SelectedIndex");
                userType.AddMemberName("GuestName");
                userType.AddMemberName("GuestAddress");
                userType.AddMemberName("GuestNo");
                userType.AddMemberName("Facade");
                userType.AddMemberName("GuestAndBookingss");
                userType.AddMemberName("random");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 4:   //  Object
                xamlType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 5:   //  System.Collections.ObjectModel.ObservableCollection`1<FrontendApp.Guest>
                userType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<FrontendApp.Guest>"));
                userType.CollectionAdd = VectorAdd_5_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 6:   //  System.Collections.ObjectModel.Collection`1<FrontendApp.Guest>
                userType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_6_Collection;
                userType.CollectionAdd = VectorAdd_6_Collection;
                xamlType = userType;
                break;

            case 7:   //  FrontendApp.Guest
                userType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_7_Guest;
                userType.AddMemberName("Guest_No");
                userType.AddMemberName("Name");
                userType.AddMemberName("Address");
                userType.AddMemberName("Booking");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 8:   //  Int32
                xamlType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 9:   //  String
                xamlType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 10:   //  System.Collections.Generic.ICollection`1<FrontendApp.Booking>
                userType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.CollectionAdd = VectorAdd_10_ICollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 11:   //  FrontendApp.Booking
                userType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_11_Booking;
                userType.AddMemberName("Booking_id");
                userType.AddMemberName("Hotel_No");
                userType.AddMemberName("Guest_No");
                userType.AddMemberName("Date_From");
                userType.AddMemberName("Date_To");
                userType.AddMemberName("Room_No");
                userType.AddMemberName("Room");
                userType.AddMemberName("Guest");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 12:   //  System.DateTime
                userType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 13:   //  System.ValueType
                userType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 14:   //  FrontendApp.Room
                userType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 15:   //  Eventmaker.Common.RelayCommand
                userType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 16:   //  FrontendApp.Facade
                userType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 17:   //  System.Collections.ObjectModel.ObservableCollection`1<FrontendApp.GuestAndBookings>
                userType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<FrontendApp.GuestAndBookings>"));
                userType.CollectionAdd = VectorAdd_17_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 18:   //  System.Collections.ObjectModel.Collection`1<FrontendApp.GuestAndBookings>
                userType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_18_Collection;
                userType.CollectionAdd = VectorAdd_18_Collection;
                xamlType = userType;
                break;

            case 19:   //  FrontendApp.GuestAndBookings
                userType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_19_GuestAndBookings;
                userType.AddMemberName("Name");
                userType.AddMemberName("Booking_id");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 20:   //  System.Collections.Generic.List`1<FrontendApp.GuestAndBookings>
                userType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_20_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 21:   //  Microsoft.Xaml.Interactivity.Interaction
                userType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("Behaviors");
                xamlType = userType;
                break;

            case 22:   //  Microsoft.Xaml.Interactivity.BehaviorCollection
                userType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_22_BehaviorCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 23:   //  Windows.UI.Xaml.DependencyObjectCollection
                xamlType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 24:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 25:   //  Microsoft.Xaml.Interactions.Core.EventTriggerBehavior
                userType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Xaml.Interactivity.Behavior"));
                userType.Activator = Activate_25_EventTriggerBehavior;
                userType.SetContentPropertyName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.Actions");
                userType.AddMemberName("Actions");
                userType.AddMemberName("EventName");
                userType.AddMemberName("SourceObject");
                xamlType = userType;
                break;

            case 26:   //  Microsoft.Xaml.Interactivity.Behavior
                userType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.AddMemberName("AssociatedObject");
                xamlType = userType;
                break;

            case 27:   //  Microsoft.Xaml.Interactivity.ActionCollection
                userType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_27_ActionCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 28:   //  Microsoft.Xaml.Interactions.Core.NavigateToPageAction
                userType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_28_NavigateToPageAction;
                userType.AddMemberName("TargetPage");
                userType.AddMemberName("Parameter");
                xamlType = userType;
                break;

            case 29:   //  Microsoft.Xaml.Interactions.Core.InvokeCommandAction
                userType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_29_InvokeCommandAction;
                userType.AddMemberName("Command");
                userType.AddMemberName("CommandParameter");
                userType.AddMemberName("InputConverter");
                userType.AddMemberName("InputConverterParameter");
                userType.AddMemberName("InputConverterLanguage");
                xamlType = userType;
                break;

            case 30:   //  System.Windows.Input.ICommand
                userType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 31:   //  Windows.UI.Xaml.Data.IValueConverter
                xamlType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 32:   //  FrontendApp.View.OpretGuestUI
                userType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_32_OpretGuestUI;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 33:   //  FrontendApp.RedigerGuestUI
                userType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_33_RedigerGuestUI;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 34:   //  FrontendApp.View.sqlViewUI
                userType = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_34_sqlViewUI;
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }


        private object get_0_GæstVM_GuestsOC(object instance)
        {
            var that = (global::FrontendApp.ViewModel.GæstVM)instance;
            return that.GuestsOC;
        }
        private void set_0_GæstVM_GuestsOC(object instance, object Value)
        {
            var that = (global::FrontendApp.ViewModel.GæstVM)instance;
            that.GuestsOC = (global::System.Collections.ObjectModel.ObservableCollection<global::FrontendApp.Guest>)Value;
        }
        private object get_1_Guest_Guest_No(object instance)
        {
            var that = (global::FrontendApp.Guest)instance;
            return that.Guest_No;
        }
        private void set_1_Guest_Guest_No(object instance, object Value)
        {
            var that = (global::FrontendApp.Guest)instance;
            that.Guest_No = (global::System.Int32)Value;
        }
        private object get_2_Guest_Name(object instance)
        {
            var that = (global::FrontendApp.Guest)instance;
            return that.Name;
        }
        private void set_2_Guest_Name(object instance, object Value)
        {
            var that = (global::FrontendApp.Guest)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_3_Guest_Address(object instance)
        {
            var that = (global::FrontendApp.Guest)instance;
            return that.Address;
        }
        private void set_3_Guest_Address(object instance, object Value)
        {
            var that = (global::FrontendApp.Guest)instance;
            that.Address = (global::System.String)Value;
        }
        private object get_4_Guest_Booking(object instance)
        {
            var that = (global::FrontendApp.Guest)instance;
            return that.Booking;
        }
        private void set_4_Guest_Booking(object instance, object Value)
        {
            var that = (global::FrontendApp.Guest)instance;
            that.Booking = (global::System.Collections.Generic.ICollection<global::FrontendApp.Booking>)Value;
        }
        private object get_5_Booking_Booking_id(object instance)
        {
            var that = (global::FrontendApp.Booking)instance;
            return that.Booking_id;
        }
        private void set_5_Booking_Booking_id(object instance, object Value)
        {
            var that = (global::FrontendApp.Booking)instance;
            that.Booking_id = (global::System.Int32)Value;
        }
        private object get_6_Booking_Hotel_No(object instance)
        {
            var that = (global::FrontendApp.Booking)instance;
            return that.Hotel_No;
        }
        private void set_6_Booking_Hotel_No(object instance, object Value)
        {
            var that = (global::FrontendApp.Booking)instance;
            that.Hotel_No = (global::System.Int32)Value;
        }
        private object get_7_Booking_Guest_No(object instance)
        {
            var that = (global::FrontendApp.Booking)instance;
            return that.Guest_No;
        }
        private void set_7_Booking_Guest_No(object instance, object Value)
        {
            var that = (global::FrontendApp.Booking)instance;
            that.Guest_No = (global::System.Int32)Value;
        }
        private object get_8_Booking_Date_From(object instance)
        {
            var that = (global::FrontendApp.Booking)instance;
            return that.Date_From;
        }
        private void set_8_Booking_Date_From(object instance, object Value)
        {
            var that = (global::FrontendApp.Booking)instance;
            that.Date_From = (global::System.DateTime)Value;
        }
        private object get_9_Booking_Date_To(object instance)
        {
            var that = (global::FrontendApp.Booking)instance;
            return that.Date_To;
        }
        private void set_9_Booking_Date_To(object instance, object Value)
        {
            var that = (global::FrontendApp.Booking)instance;
            that.Date_To = (global::System.DateTime)Value;
        }
        private object get_10_Booking_Room_No(object instance)
        {
            var that = (global::FrontendApp.Booking)instance;
            return that.Room_No;
        }
        private void set_10_Booking_Room_No(object instance, object Value)
        {
            var that = (global::FrontendApp.Booking)instance;
            that.Room_No = (global::System.Int32)Value;
        }
        private object get_11_Booking_Room(object instance)
        {
            var that = (global::FrontendApp.Booking)instance;
            return that.Room;
        }
        private void set_11_Booking_Room(object instance, object Value)
        {
            var that = (global::FrontendApp.Booking)instance;
            that.Room = (global::FrontendApp.Room)Value;
        }
        private object get_12_Booking_Guest(object instance)
        {
            var that = (global::FrontendApp.Booking)instance;
            return that.Guest;
        }
        private void set_12_Booking_Guest(object instance, object Value)
        {
            var that = (global::FrontendApp.Booking)instance;
            that.Guest = (global::FrontendApp.Guest)Value;
        }
        private object get_13_GæstVM_GemCommand(object instance)
        {
            var that = (global::FrontendApp.ViewModel.GæstVM)instance;
            return that.GemCommand;
        }
        private void set_13_GæstVM_GemCommand(object instance, object Value)
        {
            var that = (global::FrontendApp.ViewModel.GæstVM)instance;
            that.GemCommand = (global::Eventmaker.Common.RelayCommand)Value;
        }
        private object get_14_GæstVM_DeleteCommand(object instance)
        {
            var that = (global::FrontendApp.ViewModel.GæstVM)instance;
            return that.DeleteCommand;
        }
        private void set_14_GæstVM_DeleteCommand(object instance, object Value)
        {
            var that = (global::FrontendApp.ViewModel.GæstVM)instance;
            that.DeleteCommand = (global::Eventmaker.Common.RelayCommand)Value;
        }
        private object get_15_GæstVM_UpdateCommand(object instance)
        {
            var that = (global::FrontendApp.ViewModel.GæstVM)instance;
            return that.UpdateCommand;
        }
        private void set_15_GæstVM_UpdateCommand(object instance, object Value)
        {
            var that = (global::FrontendApp.ViewModel.GæstVM)instance;
            that.UpdateCommand = (global::Eventmaker.Common.RelayCommand)Value;
        }
        private object get_16_GæstVM_HentCommand(object instance)
        {
            var that = (global::FrontendApp.ViewModel.GæstVM)instance;
            return that.HentCommand;
        }
        private void set_16_GæstVM_HentCommand(object instance, object Value)
        {
            var that = (global::FrontendApp.ViewModel.GæstVM)instance;
            that.HentCommand = (global::Eventmaker.Common.RelayCommand)Value;
        }
        private object get_17_GæstVM_SelectedIndex(object instance)
        {
            var that = (global::FrontendApp.ViewModel.GæstVM)instance;
            return that.SelectedIndex;
        }
        private void set_17_GæstVM_SelectedIndex(object instance, object Value)
        {
            var that = (global::FrontendApp.ViewModel.GæstVM)instance;
            that.SelectedIndex = (global::System.Int32)Value;
        }
        private object get_18_GæstVM_GuestName(object instance)
        {
            var that = (global::FrontendApp.ViewModel.GæstVM)instance;
            return that.GuestName;
        }
        private void set_18_GæstVM_GuestName(object instance, object Value)
        {
            var that = (global::FrontendApp.ViewModel.GæstVM)instance;
            that.GuestName = (global::System.String)Value;
        }
        private object get_19_GæstVM_GuestAddress(object instance)
        {
            var that = (global::FrontendApp.ViewModel.GæstVM)instance;
            return that.GuestAddress;
        }
        private void set_19_GæstVM_GuestAddress(object instance, object Value)
        {
            var that = (global::FrontendApp.ViewModel.GæstVM)instance;
            that.GuestAddress = (global::System.String)Value;
        }
        private object get_20_GæstVM_GuestNo(object instance)
        {
            var that = (global::FrontendApp.ViewModel.GæstVM)instance;
            return that.GuestNo;
        }
        private void set_20_GæstVM_GuestNo(object instance, object Value)
        {
            var that = (global::FrontendApp.ViewModel.GæstVM)instance;
            that.GuestNo = (global::System.Int32)Value;
        }
        private object get_21_GæstVM_Facade(object instance)
        {
            var that = (global::FrontendApp.ViewModel.GæstVM)instance;
            return that.Facade;
        }
        private void set_21_GæstVM_Facade(object instance, object Value)
        {
            var that = (global::FrontendApp.ViewModel.GæstVM)instance;
            that.Facade = (global::FrontendApp.Facade)Value;
        }
        private object get_22_GæstVM_GuestAndBookingss(object instance)
        {
            var that = (global::FrontendApp.ViewModel.GæstVM)instance;
            return that.GuestAndBookingss;
        }
        private void set_22_GæstVM_GuestAndBookingss(object instance, object Value)
        {
            var that = (global::FrontendApp.ViewModel.GæstVM)instance;
            that.GuestAndBookingss = (global::System.Collections.ObjectModel.ObservableCollection<global::FrontendApp.GuestAndBookings>)Value;
        }
        private object get_23_GuestAndBookings_Name(object instance)
        {
            var that = (global::FrontendApp.GuestAndBookings)instance;
            return that.Name;
        }
        private void set_23_GuestAndBookings_Name(object instance, object Value)
        {
            var that = (global::FrontendApp.GuestAndBookings)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_24_GuestAndBookings_Booking_id(object instance)
        {
            var that = (global::FrontendApp.GuestAndBookings)instance;
            return that.Booking_id;
        }
        private void set_24_GuestAndBookings_Booking_id(object instance, object Value)
        {
            var that = (global::FrontendApp.GuestAndBookings)instance;
            that.Booking_id = (global::System.Int32)Value;
        }
        private object get_25_GæstVM_random(object instance)
        {
            var that = (global::FrontendApp.ViewModel.GæstVM)instance;
            return that.random;
        }
        private void set_25_GæstVM_random(object instance, object Value)
        {
            var that = (global::FrontendApp.ViewModel.GæstVM)instance;
            that.random = (global::System.Collections.Generic.List<global::FrontendApp.GuestAndBookings>)Value;
        }
        private object get_26_Interaction_Behaviors(object instance)
        {
            return global::Microsoft.Xaml.Interactivity.Interaction.GetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_26_Interaction_Behaviors(object instance, object Value)
        {
            global::Microsoft.Xaml.Interactivity.Interaction.SetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance, (global::Microsoft.Xaml.Interactivity.BehaviorCollection)Value);
        }
        private object get_27_EventTriggerBehavior_Actions(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.Actions;
        }
        private object get_28_EventTriggerBehavior_EventName(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.EventName;
        }
        private void set_28_EventTriggerBehavior_EventName(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            that.EventName = (global::System.String)Value;
        }
        private object get_29_EventTriggerBehavior_SourceObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.SourceObject;
        }
        private void set_29_EventTriggerBehavior_SourceObject(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            that.SourceObject = (global::System.Object)Value;
        }
        private object get_30_Behavior_AssociatedObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactivity.Behavior)instance;
            return that.AssociatedObject;
        }
        private object get_31_NavigateToPageAction_TargetPage(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.NavigateToPageAction)instance;
            return that.TargetPage;
        }
        private void set_31_NavigateToPageAction_TargetPage(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.NavigateToPageAction)instance;
            that.TargetPage = (global::System.String)Value;
        }
        private object get_32_NavigateToPageAction_Parameter(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.NavigateToPageAction)instance;
            return that.Parameter;
        }
        private void set_32_NavigateToPageAction_Parameter(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.NavigateToPageAction)instance;
            that.Parameter = (global::System.Object)Value;
        }
        private object get_33_InvokeCommandAction_Command(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.Command;
        }
        private void set_33_InvokeCommandAction_Command(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.Command = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_34_InvokeCommandAction_CommandParameter(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.CommandParameter;
        }
        private void set_34_InvokeCommandAction_CommandParameter(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.CommandParameter = (global::System.Object)Value;
        }
        private object get_35_InvokeCommandAction_InputConverter(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.InputConverter;
        }
        private void set_35_InvokeCommandAction_InputConverter(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.InputConverter = (global::Windows.UI.Xaml.Data.IValueConverter)Value;
        }
        private object get_36_InvokeCommandAction_InputConverterParameter(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.InputConverterParameter;
        }
        private void set_36_InvokeCommandAction_InputConverterParameter(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.InputConverterParameter = (global::System.Object)Value;
        }
        private object get_37_InvokeCommandAction_InputConverterLanguage(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.InputConverterLanguage;
        }
        private void set_37_InvokeCommandAction_InputConverterLanguage(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.InputConverterLanguage = (global::System.String)Value;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember xamlMember = null;
            global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "FrontendApp.ViewModel.GæstVM.GuestsOC":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FrontendApp.ViewModel.GæstVM");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "GuestsOC", "System.Collections.ObjectModel.ObservableCollection`1<FrontendApp.Guest>");
                xamlMember.Getter = get_0_GæstVM_GuestsOC;
                xamlMember.Setter = set_0_GæstVM_GuestsOC;
                break;
            case "FrontendApp.Guest.Guest_No":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FrontendApp.Guest");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "Guest_No", "Int32");
                xamlMember.Getter = get_1_Guest_Guest_No;
                xamlMember.Setter = set_1_Guest_Guest_No;
                break;
            case "FrontendApp.Guest.Name":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FrontendApp.Guest");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_2_Guest_Name;
                xamlMember.Setter = set_2_Guest_Name;
                break;
            case "FrontendApp.Guest.Address":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FrontendApp.Guest");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "Address", "String");
                xamlMember.Getter = get_3_Guest_Address;
                xamlMember.Setter = set_3_Guest_Address;
                break;
            case "FrontendApp.Guest.Booking":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FrontendApp.Guest");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "Booking", "System.Collections.Generic.ICollection`1<FrontendApp.Booking>");
                xamlMember.Getter = get_4_Guest_Booking;
                xamlMember.Setter = set_4_Guest_Booking;
                break;
            case "FrontendApp.Booking.Booking_id":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FrontendApp.Booking");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "Booking_id", "Int32");
                xamlMember.Getter = get_5_Booking_Booking_id;
                xamlMember.Setter = set_5_Booking_Booking_id;
                break;
            case "FrontendApp.Booking.Hotel_No":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FrontendApp.Booking");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "Hotel_No", "Int32");
                xamlMember.Getter = get_6_Booking_Hotel_No;
                xamlMember.Setter = set_6_Booking_Hotel_No;
                break;
            case "FrontendApp.Booking.Guest_No":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FrontendApp.Booking");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "Guest_No", "Int32");
                xamlMember.Getter = get_7_Booking_Guest_No;
                xamlMember.Setter = set_7_Booking_Guest_No;
                break;
            case "FrontendApp.Booking.Date_From":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FrontendApp.Booking");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "Date_From", "System.DateTime");
                xamlMember.Getter = get_8_Booking_Date_From;
                xamlMember.Setter = set_8_Booking_Date_From;
                break;
            case "FrontendApp.Booking.Date_To":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FrontendApp.Booking");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "Date_To", "System.DateTime");
                xamlMember.Getter = get_9_Booking_Date_To;
                xamlMember.Setter = set_9_Booking_Date_To;
                break;
            case "FrontendApp.Booking.Room_No":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FrontendApp.Booking");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "Room_No", "Int32");
                xamlMember.Getter = get_10_Booking_Room_No;
                xamlMember.Setter = set_10_Booking_Room_No;
                break;
            case "FrontendApp.Booking.Room":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FrontendApp.Booking");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "Room", "FrontendApp.Room");
                xamlMember.Getter = get_11_Booking_Room;
                xamlMember.Setter = set_11_Booking_Room;
                break;
            case "FrontendApp.Booking.Guest":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FrontendApp.Booking");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "Guest", "FrontendApp.Guest");
                xamlMember.Getter = get_12_Booking_Guest;
                xamlMember.Setter = set_12_Booking_Guest;
                break;
            case "FrontendApp.ViewModel.GæstVM.GemCommand":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FrontendApp.ViewModel.GæstVM");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "GemCommand", "Eventmaker.Common.RelayCommand");
                xamlMember.Getter = get_13_GæstVM_GemCommand;
                xamlMember.Setter = set_13_GæstVM_GemCommand;
                break;
            case "FrontendApp.ViewModel.GæstVM.DeleteCommand":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FrontendApp.ViewModel.GæstVM");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "DeleteCommand", "Eventmaker.Common.RelayCommand");
                xamlMember.Getter = get_14_GæstVM_DeleteCommand;
                xamlMember.Setter = set_14_GæstVM_DeleteCommand;
                break;
            case "FrontendApp.ViewModel.GæstVM.UpdateCommand":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FrontendApp.ViewModel.GæstVM");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "UpdateCommand", "Eventmaker.Common.RelayCommand");
                xamlMember.Getter = get_15_GæstVM_UpdateCommand;
                xamlMember.Setter = set_15_GæstVM_UpdateCommand;
                break;
            case "FrontendApp.ViewModel.GæstVM.HentCommand":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FrontendApp.ViewModel.GæstVM");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "HentCommand", "Eventmaker.Common.RelayCommand");
                xamlMember.Getter = get_16_GæstVM_HentCommand;
                xamlMember.Setter = set_16_GæstVM_HentCommand;
                break;
            case "FrontendApp.ViewModel.GæstVM.SelectedIndex":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FrontendApp.ViewModel.GæstVM");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "SelectedIndex", "Int32");
                xamlMember.Getter = get_17_GæstVM_SelectedIndex;
                xamlMember.Setter = set_17_GæstVM_SelectedIndex;
                break;
            case "FrontendApp.ViewModel.GæstVM.GuestName":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FrontendApp.ViewModel.GæstVM");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "GuestName", "String");
                xamlMember.Getter = get_18_GæstVM_GuestName;
                xamlMember.Setter = set_18_GæstVM_GuestName;
                break;
            case "FrontendApp.ViewModel.GæstVM.GuestAddress":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FrontendApp.ViewModel.GæstVM");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "GuestAddress", "String");
                xamlMember.Getter = get_19_GæstVM_GuestAddress;
                xamlMember.Setter = set_19_GæstVM_GuestAddress;
                break;
            case "FrontendApp.ViewModel.GæstVM.GuestNo":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FrontendApp.ViewModel.GæstVM");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "GuestNo", "Int32");
                xamlMember.Getter = get_20_GæstVM_GuestNo;
                xamlMember.Setter = set_20_GæstVM_GuestNo;
                break;
            case "FrontendApp.ViewModel.GæstVM.Facade":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FrontendApp.ViewModel.GæstVM");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "Facade", "FrontendApp.Facade");
                xamlMember.Getter = get_21_GæstVM_Facade;
                xamlMember.Setter = set_21_GæstVM_Facade;
                break;
            case "FrontendApp.ViewModel.GæstVM.GuestAndBookingss":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FrontendApp.ViewModel.GæstVM");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "GuestAndBookingss", "System.Collections.ObjectModel.ObservableCollection`1<FrontendApp.GuestAndBookings>");
                xamlMember.Getter = get_22_GæstVM_GuestAndBookingss;
                xamlMember.Setter = set_22_GæstVM_GuestAndBookingss;
                break;
            case "FrontendApp.GuestAndBookings.Name":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FrontendApp.GuestAndBookings");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_23_GuestAndBookings_Name;
                xamlMember.Setter = set_23_GuestAndBookings_Name;
                break;
            case "FrontendApp.GuestAndBookings.Booking_id":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FrontendApp.GuestAndBookings");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "Booking_id", "Int32");
                xamlMember.Getter = get_24_GuestAndBookings_Booking_id;
                xamlMember.Setter = set_24_GuestAndBookings_Booking_id;
                break;
            case "FrontendApp.ViewModel.GæstVM.random":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FrontendApp.ViewModel.GæstVM");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "random", "System.Collections.Generic.List`1<FrontendApp.GuestAndBookings>");
                xamlMember.Getter = get_25_GæstVM_random;
                xamlMember.Setter = set_25_GæstVM_random;
                break;
            case "Microsoft.Xaml.Interactivity.Interaction.Behaviors":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Interaction");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "Behaviors", "Microsoft.Xaml.Interactivity.BehaviorCollection");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_26_Interaction_Behaviors;
                xamlMember.Setter = set_26_Interaction_Behaviors;
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.Actions":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "Actions", "Microsoft.Xaml.Interactivity.ActionCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_27_EventTriggerBehavior_Actions;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.EventName":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "EventName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_28_EventTriggerBehavior_EventName;
                xamlMember.Setter = set_28_EventTriggerBehavior_EventName;
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.SourceObject":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "SourceObject", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_29_EventTriggerBehavior_SourceObject;
                xamlMember.Setter = set_29_EventTriggerBehavior_SourceObject;
                break;
            case "Microsoft.Xaml.Interactivity.Behavior.AssociatedObject":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Behavior");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "AssociatedObject", "Windows.UI.Xaml.DependencyObject");
                xamlMember.Getter = get_30_Behavior_AssociatedObject;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Core.NavigateToPageAction.TargetPage":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.NavigateToPageAction");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "TargetPage", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_31_NavigateToPageAction_TargetPage;
                xamlMember.Setter = set_31_NavigateToPageAction_TargetPage;
                break;
            case "Microsoft.Xaml.Interactions.Core.NavigateToPageAction.Parameter":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.NavigateToPageAction");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "Parameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_32_NavigateToPageAction_Parameter;
                xamlMember.Setter = set_32_NavigateToPageAction_Parameter;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.Command":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "Command", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_33_InvokeCommandAction_Command;
                xamlMember.Setter = set_33_InvokeCommandAction_Command;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.CommandParameter":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "CommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_InvokeCommandAction_CommandParameter;
                xamlMember.Setter = set_34_InvokeCommandAction_CommandParameter;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.InputConverter":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "InputConverter", "Windows.UI.Xaml.Data.IValueConverter");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_InvokeCommandAction_InputConverter;
                xamlMember.Setter = set_35_InvokeCommandAction_InputConverter;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.InputConverterParameter":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "InputConverterParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_36_InvokeCommandAction_InputConverterParameter;
                xamlMember.Setter = set_36_InvokeCommandAction_InputConverterParameter;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.InputConverterLanguage":
                userType = (global::FrontendApp.FrontendApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::FrontendApp.FrontendApp_XamlTypeInfo.XamlMember(this, "InputConverterLanguage", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_37_InvokeCommandAction_InputConverterLanguage;
                xamlMember.Setter = set_37_InvokeCommandAction_InputConverterLanguage;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::FrontendApp.FrontendApp_XamlTypeInfo.XamlSystemBaseType
    {
        global::FrontendApp.FrontendApp_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::FrontendApp.FrontendApp_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::FrontendApp.FrontendApp_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::FrontendApp.FrontendApp_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

